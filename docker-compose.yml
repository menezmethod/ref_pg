version: '3.8'

services:
  db:
    image: postgres:15
    container_name: url_shortener_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
      - ./docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./docker/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./docker/postgres/init-password.sh:/docker-entrypoint-initdb.d/init-password.sh
    command: postgres -c config_file=/etc/postgresql/postgresql.conf -c hba_file=/etc/postgresql/pg_hba.conf
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-url_shortener}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_change_me}
      MASTER_PASSWORD: ${MASTER_PASSWORD:-master123}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-url_shortener}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shortener-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:alpine
    container_name: url_shortener_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shortener-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgrest:
    image: postgrest/postgrest:latest
    container_name: url_shortener_api
    restart: always
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./docker/postgrest/postgrest.conf:/etc/postgrest.conf
    environment:
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_change_me}
    command: /bin/postgrest /etc/postgrest.conf
    ports:
      - "3001:3000"
    networks:
      - shortener-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  openresty:
    build:
      context: ./docker/openresty
      dockerfile: Dockerfile
    container_name: url_shortener_redirect
    restart: always
    depends_on:
      - db
      - postgrest
    environment:
      RATE_LIMIT_REQUESTS: ${RATE_LIMIT_REQUESTS:-60}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-60}
      LOG_LEVEL: ${LOG_LEVEL:-notice}
    ports:
      - "8000:80"
    networks:
      - shortener-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: url_shortener_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - shortener-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  swagger:
    image: swaggerapi/swagger-ui
    container_name: url_shortener_swagger
    ports:
      - "8080:8080"
    environment:
      API_URL: http://localhost:3001/
    depends_on:
      - postgrest
    networks:
      - shortener-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus:latest
    container_name: url_shortener_prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - shortener-net
    depends_on:
      - db
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  shortener-net:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
  prometheus_data: 