version: '3'

services:
  db:
    image: postgres:15
    container_name: url_shortener_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-url_shortener}
    networks:
      - shortener-net

  init-db:
    image: postgres:15
    restart: "no"
    depends_on:
      - db
    volumes:
      - ./migrations:/migrations
    command: >
      bash -c "
        echo 'Waiting for PostgreSQL...' &&
        sleep 10 &&
        echo 'Running migration script...' &&
        PGPASSWORD=$POSTGRES_PASSWORD psql -h db -U $POSTGRES_USER -d $POSTGRES_DB -f /migrations/000_main_migration.sql &&
        echo 'Database initialization completed.'
      "
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-url_shortener}
    networks:
      - shortener-net

  postgrest:
    image: postgrest/postgrest:latest
    container_name: url_shortener_api
    restart: always
    depends_on:
      - db
      - init-db
    environment:
      PGRST_DB_URI: postgres://authenticator:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-url_shortener}
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_change_me}
      PGRST_SERVER_PORT: 3000
    ports:
      - "3333:3000"
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 15 &&
        postgrest
      "
    networks:
      - shortener-net

  openresty:
    image: openresty/openresty:alpine
    container_name: url_shortener_redirect
    restart: always
    depends_on:
      - postgrest
    environment:
      RATE_LIMIT_REQUESTS: ${RATE_LIMIT_REQUESTS:-60}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-60}
      LOG_LEVEL: debug
      CORS_ALLOW_ORIGIN: ${CORS_ALLOW_ORIGIN:-*}
    ports:
      - "8001:80"
    volumes:
      - ./nginx.conf.coolify:/tmp/nginx.conf:ro
    command: >
      sh -c "
        if [ -d /etc/nginx/conf.d/default.conf ]; then
          rm -rf /etc/nginx/conf.d/default.conf;
        fi &&
        mkdir -p /etc/nginx/conf.d &&
        cp /tmp/nginx.conf /etc/nginx/conf.d/default.conf &&
        /usr/local/openresty/bin/openresty -g 'daemon off;'
      "
    networks:
      - shortener-net

networks:
  shortener-net:
    driver: bridge

volumes:
  postgres_data: 